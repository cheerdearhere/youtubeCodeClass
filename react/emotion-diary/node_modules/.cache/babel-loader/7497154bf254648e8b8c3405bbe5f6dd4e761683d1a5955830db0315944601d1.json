{"ast":null,"code":"var _jsxFileName = \"/Users/choikmacbookair/Desktop/workspace/youtubeWorks/react/emotion-diary/src/pages/Edit.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport DiaryEditor from \"../components/DiaryEditor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Edit = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const [originData, setOriginData] = useState();\n  useEffect(() => {\n    const titleElement = document.getElementsByTagName(\"title\")[0];\n    titleElement.innerHTML = `감정 일기장 - ${id} 일기 수정`;\n  }, [id]);\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(it => parseInt(it.id) === parseInt(id));\n      if (targetDiary) {\n        setOriginData(targetDiary);\n      } else {\n        alert(\"없는 일기입니다.\");\n        navigate(\"/\", {\n          replace: true\n        });\n      }\n    }\n  }, [id, diaryList, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Edit\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: originData && /*#__PURE__*/_jsxDEV(DiaryEditor, {\n        isEdit: true,\n        originData: originData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Edit, \"UTjE6MkrZgQyHQv+UwWJxycsixM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["useContext","useEffect","useState","useNavigate","useParams","DiaryStateContext","DiaryEditor","jsxDEV","_jsxDEV","Edit","_s","navigate","id","diaryList","originData","setOriginData","titleElement","document","getElementsByTagName","innerHTML","length","targetDiary","find","it","parseInt","alert","replace","className","children","isEdit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/choikmacbookair/Desktop/workspace/youtubeWorks/react/emotion-diary/src/pages/Edit.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { DiaryStateContext } from \"../App\";\r\nimport DiaryEditor from \"../components/DiaryEditor\";\r\n\r\nconst Edit = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const diaryList = useContext(DiaryStateContext);\r\n  const [originData, setOriginData] = useState();\r\n  useEffect(() => {\r\n    const titleElement = document.getElementsByTagName(\"title\")[0];\r\n    titleElement.innerHTML = `감정 일기장 - ${id} 일기 수정`;\r\n  }, [id]);\r\n  useEffect(() => {\r\n    if (diaryList.length >= 1) {\r\n      const targetDiary = diaryList.find(\r\n        (it) => parseInt(it.id) === parseInt(id),\r\n      );\r\n      if (targetDiary) {\r\n        setOriginData(targetDiary);\r\n      } else {\r\n        alert(\"없는 일기입니다.\");\r\n        navigate(\"/\", { replace: true });\r\n      }\r\n    }\r\n  }, [id, diaryList, navigate]);\r\n  return (\r\n    <div className=\"Edit\">\r\n      <h2>\r\n        {originData && <DiaryEditor isEdit={true} originData={originData} />}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\nexport default Edit;\r\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,iBAAiB,QAAQ,QAAQ;AAC1C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAMS,SAAS,GAAGb,UAAU,CAACK,iBAAiB,CAAC;EAC/C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAC9CD,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAGC,QAAQ,CAACC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9DF,YAAY,CAACG,SAAS,GAAI,YAAWP,EAAG,QAAO;EACjD,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC;EACRX,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,CAACO,MAAM,IAAI,CAAC,EAAE;MACzB,MAAMC,WAAW,GAAGR,SAAS,CAACS,IAAI,CAC/BC,EAAE,IAAKC,QAAQ,CAACD,EAAE,CAACX,EAAE,CAAC,KAAKY,QAAQ,CAACZ,EAAE,CACzC,CAAC;MACD,IAAIS,WAAW,EAAE;QACfN,aAAa,CAACM,WAAW,CAAC;MAC5B,CAAC,MAAM;QACLI,KAAK,CAAC,WAAW,CAAC;QAClBd,QAAQ,CAAC,GAAG,EAAE;UAAEe,OAAO,EAAE;QAAK,CAAC,CAAC;MAClC;IACF;EACF,CAAC,EAAE,CAACd,EAAE,EAAEC,SAAS,EAAEF,QAAQ,CAAC,CAAC;EAC7B,oBACEH,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBpB,OAAA;MAAAoB,QAAA,EACGd,UAAU,iBAAIN,OAAA,CAACF,WAAW;QAACuB,MAAM,EAAE,IAAK;QAACf,UAAU,EAAEA;MAAW;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACvB,EAAA,CA7BID,IAAI;EAAA,QACSN,WAAW,EACbC,SAAS;AAAA;AAAA8B,EAAA,GAFpBzB,IAAI;AA8BV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}